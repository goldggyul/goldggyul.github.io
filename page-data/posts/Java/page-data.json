{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Java","result":{"pageContext":{"currentCategory":"Java","categories":["All","Python","운영체제","네트워크","TIL","Java"],"edges":[{"node":{"id":"f7afaeeb-2c67-510f-a380-ee623277fcd7","excerpt":"을 설정해보자 실행 시 cp 지정해주거나 MANIFEST 파일 작성하거나.. 다 뭔가 잘못했는 지 안되다가 아래 방법으로 됐다! 1. Main Class 지정 우선 라이브러리 경로를 추가하기 전에 Main Class를 지정했는 지 확인해보자. 지정해주지 않으면 Main을 못찾는 에러가 날 수 있다. 2. 라이브러리 경로를 추가 만약 라이브러리 파일들이 있는 경로가  폴더라고 해보자. 그러면 아래와 같이 추가하면 된다 외에도 다양한 설정이 있다. 자세한 내용은 gradle docs 참고 3. runtime class path 지정 2번까지만 진행하면 로 빌드는 되지만, 그 후 로 실행 시에 라이브러리의 클래스들을 읽지 못하는 문제가 발생한다. 따라서 class path가 이상한 것 같아서 해당 내용으로 찾다 보니 아래와 같이 추가하면 됐다. 이 때 원래는 만 지정해주면 되는 것 같은데.. 나는  오류가 발생했고, 부분을 추가했더니 해결됐다. 4. 실행해보자! 야호~! 을 설정해보자 …","tableOfContents":"<ul>\n<li>\n<p><a href=\"#code-classlanguage-textbuildgradlecode%EC%9D%84-%EC%84%A4%EC%A0%95%ED%95%B4%EB%B3%B4%EC%9E%90\"><code class=\"language-text\">build.gradle</code>을 설정해보자</a></p>\n<ul>\n<li><a href=\"#1-main-class-%EC%A7%80%EC%A0%95\">1. Main Class 지정</a></li>\n<li><a href=\"#2-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EA%B2%BD%EB%A1%9C%EB%A5%BC-%EC%B6%94%EA%B0%80\">2. 라이브러리 경로를 추가</a></li>\n<li><a href=\"#3-runtime-class-path-%EC%A7%80%EC%A0%95\">3. runtime class path 지정</a></li>\n<li><a href=\"#4-%EC%8B%A4%ED%96%89%ED%95%B4%EB%B3%B4%EC%9E%90\">4. 실행해보자!</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/java-001/"},"frontmatter":{"categories":"Java","title":"gradle로 빌드 & 실행 시에 라이브러리(jar파일) 포함하기","date":"June 19, 2022"}},"next":null,"previous":{"fields":{"slug":"/til-001/"}}}]}},"staticQueryHashes":["1956554647","2938748437","3454833782"]}